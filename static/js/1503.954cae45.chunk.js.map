{"version":3,"file":"static/js/1503.954cae45.chunk.js","mappings":"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","sources":["api/contract.ts","page/finance/bill.tsx","utils/exportToExcel.ts"],"sourcesContent":["import { post } from \"../utils/http/request\";\r\n\r\ninterface SearchData{\r\n    contractNo:string;\r\n    person:string;\r\n    tel:string;\r\n    page:number;\r\n    pageSize:number\r\n}\r\ninterface SearchData2{\r\n    page:number;\r\n    pageSize:number;\r\n    no:string;\r\n    status:string;\r\n    startDate:string;\r\n    endDate:string;\r\n}\r\n\r\nexport function getContractList(data:SearchData){\r\n    return post(\"/contractList\",data)\r\n}\r\n\r\n\r\nexport function getBillList(data:SearchData2){\r\n    return post(\"/billList\",data)\r\n}","import { Card, Row, Col, Input, Table, Pagination, Statistic, DatePicker, Select, Button, Tag } from \"antd\"\r\nimport { DownloadOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { TableProps } from \"antd\";\r\nimport { getBillList } from \"../../api/contract\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { exportToExcel } from \"../../utils/exportToExcel\";\r\nconst { RangePicker } = DatePicker\r\n\r\ninterface DataType {\r\n    key?: string;\r\n    accountNo: string;\r\n    status?: string;\r\n    roomNo?: string;\r\n    carNo?: string;\r\n    tel?: string;\r\n    costName1?: string;\r\n    costName2?: string;\r\n    costName3?: string;\r\n    startDate?: string;\r\n    endDate?: string;\r\n    preferential?: number;\r\n    money?: number;\r\n    pay?: string;\r\n\r\n}\r\n\r\ninterface SearchType {\r\n    date: string[];\r\n    no: string;\r\n    status: string;\r\n    page: number;\r\n    pageSize: number\r\n}\r\n\r\nfunction Bill() {\r\n    const columns: TableProps<DataType>[\"columns\"] = [\r\n        {\r\n            title: \"No.\",\r\n            key: \"index\",\r\n            render(value, record, index) {\r\n                return index + 1\r\n            },\r\n            width: 100,\r\n            fixed: \"left\"\r\n        },\r\n        {\r\n            title: \"帳單號\",\r\n            dataIndex: \"accountNo\",\r\n            key: \"accountNo\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"繳費狀態\",\r\n            dataIndex: \"status\",\r\n            key: \"status\",\r\n            width: 100,\r\n            render(value) {\r\n                return value == 1 ? <Tag color=\"green\">已繳費</Tag> : <Tag color=\"red\">未繳費</Tag>\r\n            }\r\n        },\r\n        {\r\n            title: \"房屋號\",\r\n            dataIndex: \"roomNo\",\r\n            key: \"roomNo\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"車位號\",\r\n            dataIndex: \"carNo\",\r\n            key: \"carNo\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"手機號\",\r\n            dataIndex: \"tel\",\r\n            key: \"tel\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"物業費(年)\",\r\n            dataIndex: \"costName1\",\r\n            key: \"costName1\",\r\n            width: 150,\r\n        },\r\n\r\n        {\r\n            title: \"車位費\",\r\n            dataIndex: \"costName2\",\r\n            key: \"costName2\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"房屋租金\",\r\n            dataIndex: \"costName3\",\r\n            key: \"costName3\",\r\n            width: 150,\r\n        },\r\n\r\n        {\r\n            title: \"開始時間\",\r\n            dataIndex: \"startDate\",\r\n            key: \"startDate\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"結束時間\",\r\n            dataIndex: \"endDate\",\r\n            key: \"endDate\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"優惠金額\",\r\n            dataIndex: \"preferential\",\r\n            key: \"preferential\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"合計應收金額\",\r\n            dataIndex: \"money\",\r\n            key: \"money\",\r\n            width: 150,\r\n        },\r\n        {\r\n            title: \"支付方式\",\r\n            dataIndex: \"pay\",\r\n            key: \"pay\",\r\n            width: 100,\r\n        },\r\n        {\r\n            title: \"操作\",\r\n            width: 230,\r\n            key: \"operate\",\r\n            fixed: \"right\",\r\n            render(value) {\r\n                return <>\r\n                    <Button type=\"primary\" size=\"small\">打印</Button>\r\n                    <Button type=\"primary\" size=\"small\" danger className=\"ml mr\">帳單作廢</Button>\r\n                    <Button type=\"primary\" size=\"small\">退款</Button>\r\n                </>\r\n            }\r\n        }\r\n    ]\r\n\r\n    const [formData, setFormData] = useState<SearchType>({\r\n        date: [],\r\n        no: \"\",\r\n        status: \"\",\r\n        page: 1,\r\n        pageSize: 10\r\n    })\r\n    const [dataList, setDataList] = useState<DataType[]>([]);\r\n    const [page, setPage] = useState<number>(1)\r\n    const [pageSize, setPageSize] = useState<number>(10);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [total, setTotal] = useState<number>(0)\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([])\r\n    const [selectedRows, setSelectedRows] = useState<any>({ accountNo: \"\" })\r\n\r\n    const handleChange = (value: any, dateString: any) => {\r\n        console.log(value, dateString)\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            date: dateString\r\n        }))\r\n    }\r\n\r\n    const handleChange1 = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target;\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            no: value\r\n        }))\r\n    }\r\n\r\n    const handleChange2 = (value: string) => {\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            status: value\r\n        }))\r\n    }\r\n\r\n    const onSelectChange = (selectedRowKeys: React.Key[], selectedRows: any) => {\r\n        console.log(selectedRows)\r\n        setSelectedRowKeys(selectedRowKeys)\r\n        setSelectedRows(selectedRows)\r\n    }\r\n\r\n    const rowSelection = {\r\n        selectedRowKeys,\r\n        onChange: onSelectChange,\r\n        preserveSelectedRowKeys: true\r\n    }\r\n\r\n    const disabled = useMemo(() => {\r\n        return selectedRowKeys.length ? false : true\r\n    }, [selectedRowKeys])\r\n\r\n    const loadData = async () => {\r\n        setLoading(true)\r\n        const { data: { list, total } } = await getBillList({ page, pageSize, startDate: formData.date[0], endDate: formData.date[1], no: formData.no, status: formData.status })\r\n        setLoading(false);\r\n        setDataList(list);\r\n        setTotal(total)\r\n    }\r\n    const header = [\"accountNo\", \"status\", 'roomNo', 'carNo', 'tel', 'costName1', 'costName2', 'costName3', 'startDate', 'endDate', 'preferential', 'money', 'pay']\r\n    useEffect(() => {\r\n        loadData()\r\n    }, [page, pageSize])\r\n    const onChange = (page: number, pageSize: number) => {\r\n        setPage(page)\r\n        setPageSize(pageSize)\r\n    }\r\n    return <div>\r\n        <Card >\r\n            <Row gutter={16}>\r\n                <Col span={6}>\r\n                    <Statistic title=\"應收帳單金額\" value=\"16,876.38\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Statistic title=\"已繳帳單金額\" value=\"6,952.00\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Statistic title=\"已退帳單金額\" value=\"2,355.23\" />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Statistic title=\"未繳帳單金額\" value=\"9,962.00\" />\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n        <Card className=\"mt search\">\r\n            <Row gutter={16}>\r\n                <Col span={6}>\r\n                    <p>帳單日期</p>\r\n                    <RangePicker name=\"date\" style={{ width: \"100%\" }} onChange={handleChange} />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <p>房/車號：</p>\r\n                    <Input placeholder=\"請輸入門牌號或者車位號\" value={formData.no} onChange={handleChange1} />\r\n                </Col>\r\n                <Col span={6}>\r\n                    <p>繳費情況</p>\r\n                    <Select\r\n                        style={{ width: \"100%\" }}\r\n                        options={[\r\n                            { value: \"1\", label: \"全部\" },\r\n                            { value: \"2\", label: \"已繳納\" },\r\n                            { value: \"3\", label: \"未繳納\" }\r\n                        ]}\r\n                        onChange={handleChange2}\r\n                    ></Select>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Button type=\"primary\" className=\"mr\" onClick={loadData}>查询</Button>\r\n                    <Button>重置</Button>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n        <Card className=\"mt\">\r\n            <Button type=\"primary\" icon={<DownloadOutlined />} disabled={disabled} onClick={() => exportToExcel(selectedRows, header)}>導出為Excel</Button>\r\n            <Button icon={<DeleteOutlined />} danger className=\"ml\" type=\"primary\" disabled={disabled}>批量作廢</Button>\r\n        </Card>\r\n        <Card className=\"mt\">\r\n            <Table\r\n                dataSource={dataList}\r\n                columns={columns}\r\n                pagination={false}\r\n                rowKey={(record) => record.accountNo}\r\n                rowSelection={rowSelection}\r\n\r\n                scroll={{ x: 1200 }}\r\n            />\r\n            <Pagination className=\"fr mt\" showQuickJumper current={page} pageSize={pageSize} total={total} onChange={onChange} />\r\n        </Card>\r\n    </div>\r\n}\r\n\r\nexport default Bill","import * as XLSX from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nexport function exportToExcel(data: any, header: string[]) {\r\n  const ws = XLSX.utils.json_to_sheet(\r\n    data, { header }\r\n  );\r\n  // 創建一個工作簿\r\n  const wb = XLSX.utils.book_new()\r\n  // 把我們的工作表加到工作簿中\r\n  XLSX.utils.book_append_sheet(wb, ws, \"sheet1\");\r\n  // 轉成二進制數據\r\n  const buf = XLSX.write(wb, { bookType: \"xlsx\", type: \"buffer\" });\r\n  // 保存和下載\r\n  saveAs(new Blob([buf], { type: \"application/octet-stream\" }), \"selected-data.xlsx\")\r\n}"],"names":["getContractList","data","post","getBillList","RangePicker","DatePicker","columns","title","key","render","value","record","index","width","fixed","dataIndex","_jsx","Tag","color","children","_jsxs","_Fragment","Button","type","size","danger","className","formData","setFormData","useState","date","no","status","page","pageSize","dataList","setDataList","setPage","setPageSize","loading","setLoading","total","setTotal","selectedRowKeys","setSelectedRowKeys","selectedRows","setSelectedRows","accountNo","rowSelection","onChange","onSelectChange","console","log","preserveSelectedRowKeys","disabled","useMemo","length","loadData","async","list","startDate","endDate","header","useEffect","Card","Row","gutter","Col","span","Statistic","name","style","handleChange","dateString","prevState","Input","placeholder","e","target","Select","options","label","onClick","icon","DownloadOutlined","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","buf","bookType","saveAs","Blob","exportToExcel","DeleteOutlined","Table","dataSource","pagination","rowKey","scroll","x","Pagination","showQuickJumper","current"],"sourceRoot":""}