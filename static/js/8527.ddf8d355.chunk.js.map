{"version":3,"file":"static/js/8527.ddf8d355.chunk.js","mappings":"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","sources":["components/navLeft/iconList.tsx","components/navLeft/index.tsx","components/breadCrumb/index.tsx","components/header/index.tsx","page/home/index.tsx"],"sourcesContent":["import {\r\n    DashboardOutlined,\r\n    UserOutlined,\r\n    UnorderedListOutlined,\r\n    UserAddOutlined,\r\n    SettingOutlined,\r\n    ProfileOutlined,\r\n    ToolOutlined,\r\n    LaptopOutlined,\r\n    InsertRowLeftOutlined,\r\n    BankOutlined,\r\n    TruckOutlined,\r\n    DollarOutlined ,\r\n    FileTextOutlined,\r\n    FrownOutlined,\r\n    TransactionOutlined,\r\n    FundProjectionScreenOutlined,\r\n    FundViewOutlined,\r\n    ReadOutlined,\r\n    CommentOutlined,\r\n    ThunderboltOutlined,\r\n    TeamOutlined \r\n  } from '@ant-design/icons';\r\nconst icons:any = {\r\n    DashboardOutlined: <DashboardOutlined />,\r\n    UserOutlined: <UserOutlined />,\r\n    UnorderedListOutlined: <UnorderedListOutlined />,\r\n    UserAddOutlined: <UserAddOutlined />,\r\n    SettingOutlined: <SettingOutlined />,\r\n    LaptopOutlined:<LaptopOutlined/>,\r\n    ProfileOutlined: <ProfileOutlined />,\r\n    InsertRowLeftOutlined:<InsertRowLeftOutlined/>,\r\n    BankOutlined:<BankOutlined/>,\r\n    ToolOutlined: <ToolOutlined />,\r\n    TruckOutlined:<TruckOutlined/>,\r\n    DollarOutlined:<DollarOutlined/>,\r\n    FileTextOutlined:<FileTextOutlined/>,\r\n    FrownOutlined:<FrownOutlined/>,\r\n    TransactionOutlined:<TransactionOutlined/>,\r\n    FundProjectionScreenOutlined:<FundProjectionScreenOutlined/>,\r\n    FundViewOutlined:<FundViewOutlined/>,\r\n    ReadOutlined:<ReadOutlined/>,\r\n    CommentOutlined:<CommentOutlined/>,\r\n    ThunderboltOutlined:<ThunderboltOutlined/>,\r\n    TeamOutlined:<TeamOutlined/>\r\n  };\r\n\r\n  export default icons","import React, { useEffect, useState } from 'react';\r\nimport { Menu } from 'antd';\r\nimport icons from './iconList'\r\nimport logo from \"../../assets/logo.png\"\r\nimport { useNavigate, useLocation } from 'react-router';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"./index.scss\"\r\ninterface MenuItem {\r\n    key: string,\r\n    label: string,\r\n    icon?: React.ReactNode,\r\n    children?: MenuItem[]\r\n}\r\ninterface MenuItemFromData {\r\n    key: string,\r\n    label: string,\r\n    icon: string,\r\n    children?: MenuItemFromData[]\r\n}\r\n\r\nfunction NavLeft() {\r\n    const { menuList } = useSelector((state: any) => state.authSlice)\r\n    const [menuData, setMenuData] = useState<MenuItem[]>([])\r\n    const navigate = useNavigate()\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        configMenu()\r\n    }, [menuList])\r\n\r\n    async function configMenu() {\r\n        const mappedMenuItems: MenuItem[] = mapMenuItems(menuList)\r\n        setMenuData(mappedMenuItems)\r\n    }\r\n\r\n    // 將返回的菜單數據轉換成我們需要的格式\r\n    function mapMenuItems(items: MenuItemFromData[]): any {\r\n        return items.map((item: MenuItemFromData) => ({\r\n            key: item.key,\r\n            label: item.label,\r\n            icon: icons[item.icon],\r\n            children: item.children ? mapMenuItems(item.children) : null // 遞歸\r\n        }))\r\n    }\r\n\r\n    function handleClick({ key }: { key: string }) {\r\n        navigate(key)\r\n    }\r\n\r\n\r\n    return <div className='navleft'>\r\n        <div className='logo'>\r\n            <img src={logo} alt=\"\" width={18} />\r\n            <h1>朋遠智慧園區</h1>\r\n        </div>\r\n\r\n        <Menu\r\n            defaultSelectedKeys={['/dashboard']}\r\n            mode=\"inline\"\r\n            theme=\"dark\"\r\n            items={menuData}\r\n            onClick={handleClick}\r\n            selectedKeys={[location.pathname]}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default NavLeft","import { useLocation } from \"react-router\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Breadcrumb } from 'antd';\r\n\r\ninterface MenuItem {\r\n    key: string,\r\n    label: string,\r\n    children?: MenuItem[]\r\n}\r\n\r\n//[{label:\"物業管理\"},{label:\"樓宇管理\"}] [\"物業管理\",\"樓宇管理\"]\r\nfunction findBreadCrumbPath(path: string, menuItems: MenuItem[]): string[] {\r\n    const pathSegments: string[] = [];\r\n\r\n    function findPath(currentPath: string, items: MenuItem[]) {\r\n        for (let item of items) {\r\n            if (currentPath.startsWith(item.key)) {\r\n                pathSegments.push(item.label)\r\n                if (item.children) {\r\n                    findPath(currentPath, item.children)\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return pathSegments\r\n    }\r\n    return findPath(path, menuItems)\r\n}\r\n\r\nfunction MyBreadCrumb() {\r\n    const location = useLocation()\r\n    const { menuList } = useSelector((state: any) => state.authSlice)\r\n    const breadList = findBreadCrumbPath(location.pathname, menuList).map(item => ({ title: item }))\r\n    return <Breadcrumb items={breadList} className=\"mt mb\" />\r\n}\r\n\r\nexport default MyBreadCrumb","import React from 'react';\r\nimport { UserOutlined, PoweroffOutlined, DownOutlined } from '@ant-design/icons';\r\nimport type { MenuProps } from 'antd';\r\nimport { Dropdown, Space } from 'antd';\r\nimport { clearToken } from '../../store/login/authSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router';\r\nimport { setMenu } from '../../store/login/authSlice';\r\n\r\nconst items: MenuProps['items'] = [\r\n    {\r\n        key: '1',\r\n        label: (\r\n            <a target=\"_blank\" >\r\n                個人中心\r\n            </a>\r\n        ),\r\n        icon: <UserOutlined />,\r\n    },\r\n    {\r\n        key: '2',\r\n        label: (\r\n            <a target=\"_blank\" >\r\n                退出登錄\r\n            </a>\r\n        ),\r\n        icon: <PoweroffOutlined />,\r\n    },\r\n\r\n];\r\nfunction MyHeader() {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const onClick: MenuProps['onClick'] = ({ key }) => {\r\n        if (key == \"1\") {\r\n            //跳轉到個人中心\r\n            navigate(\"/personal\")\r\n        } else {\r\n            dispatch(clearToken());\r\n            dispatch(setMenu([]))\r\n            sessionStorage.clear()\r\n        }\r\n\r\n    }\r\n    return <div>\r\n        <Dropdown menu={{ items, onClick }}>\r\n            <a onClick={(e) => e.preventDefault()}>\r\n                <Space>\r\n                    歡迎您,{sessionStorage.getItem(\"username\")}\r\n                    <DownOutlined />\r\n                </Space>\r\n            </a>\r\n        </Dropdown>\r\n    </div>\r\n}\r\n\r\nexport default MyHeader","import { useState } from 'react';\r\nimport { Breadcrumb, Layout, theme } from 'antd';\r\nimport NavLeft from '../../components/navLeft';\r\nimport MyBreadCrumb from '../../components/breadCrumb';\r\nimport MyHeader from '../../components/header';\r\nimport { Outlet } from 'react-router';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nfunction Home() {\r\n    const [collapsed, setCollapsed] = useState<boolean>(false);\r\n    const {\r\n        token: { colorBgContainer, borderRadiusLG },\r\n    } = theme.useToken();\r\n\r\n    return <div className='home'>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n            <Sider collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}>\r\n                <NavLeft />\r\n            </Sider>\r\n            <Layout>\r\n                <Header style={{ paddingRight: \"20px\", background: colorBgContainer, textAlign: \"right\" }}>\r\n                    <MyHeader />\r\n                </Header>\r\n                <Content style={{ margin: '0 16px', height: \"90vh\", overflowY: \"auto\", overflowX: \"hidden\" }}>\r\n                    <MyBreadCrumb />\r\n                    <Outlet />\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>\r\n                    Ant Design ©{new Date().getFullYear()} Created by Ant UED\r\n                </Footer>\r\n            </Layout>\r\n        </Layout>\r\n    </div>\r\n}\r\n\r\nexport default Home;"],"names":["DashboardOutlined","_jsx","UserOutlined","UnorderedListOutlined","UserAddOutlined","SettingOutlined","LaptopOutlined","ProfileOutlined","InsertRowLeftOutlined","BankOutlined","ToolOutlined","TruckOutlined","DollarOutlined","FileTextOutlined","FrownOutlined","TransactionOutlined","FundProjectionScreenOutlined","FundViewOutlined","ReadOutlined","CommentOutlined","ThunderboltOutlined","TeamOutlined","menuList","useSelector","state","authSlice","menuData","setMenuData","useState","navigate","useNavigate","location","useLocation","mapMenuItems","items","map","item","key","label","icon","icons","children","useEffect","async","mappedMenuItems","configMenu","_jsxs","className","src","logo","alt","width","Menu","defaultSelectedKeys","mode","theme","onClick","_ref","selectedKeys","pathname","breadList","path","menuItems","pathSegments","findPath","currentPath","startsWith","push","findBreadCrumbPath","title","Breadcrumb","target","PoweroffOutlined","dispatch","useDispatch","Dropdown","menu","clearToken","setMenu","sessionStorage","clear","e","preventDefault","Space","getItem","DownOutlined","Header","Content","Footer","Sider","Layout","collapsed","setCollapsed","token","colorBgContainer","borderRadiusLG","useToken","style","minHeight","collapsible","onCollapse","value","NavLeft","paddingRight","background","textAlign","MyHeader","margin","height","overflowY","overflowX","MyBreadCrumb","Outlet","Date","getFullYear"],"sourceRoot":""}