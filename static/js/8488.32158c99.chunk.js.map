{"version":3,"file":"static/js/8488.32158c99.chunk.js","mappings":"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","sources":["hooks/useDataList.ts","utils/withPermissions.tsx","page/settings/index.tsx"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\r\n\r\ninterface DataFetcher<T, R> {\r\n    (args: T & { page: number; pageSize: number }): Promise<R>;\r\n}\r\nfunction useDataList<T extends { [K in keyof T]: string | number | boolean }, U>(initialFormData: T, fetchData: DataFetcher<T, { data: { list: U[]; total: number } }>) {\r\n    const [dataList, setDataList] = useState<U[]>([])\r\n    const [page, setPage] = useState<number>(1);\r\n    const [pageSize, setPageSize] = useState<number>(10);\r\n    const [total, setTotal] = useState<number>(0)\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [formData, setFormData] = useState<T>(initialFormData);\r\n\r\n    const loadData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const { data: { list, total } } = await fetchData({ page, pageSize, ...formData });\r\n            setDataList(list);\r\n            setTotal(total)\r\n        } catch (error) {\r\n\r\n            console.log(error)\r\n        } finally {\r\n\r\n            setLoading(false)\r\n        }\r\n    }, [formData, page, pageSize, fetchData])\r\n\r\n    useEffect(() => {\r\n        loadData()\r\n    }, [loadData]);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const onChange = (page: number, pageSize: number) => {\r\n        setPage(page);\r\n        setPageSize(pageSize)\r\n    }\r\n\r\n    const reset = () => {\r\n        setPage(1)\r\n        setPageSize(10)\r\n        setFormData(initialFormData)\r\n    }\r\n    return { dataList, page, pageSize, total, loading, formData, setDataList, setPage, setPageSize, setTotal, setLoading, setFormData, loadData, onChange, handleChange, reset }\r\n}\r\n\r\n\r\nexport default useDataList","import React from 'react';\n\nconst withPermissions = (required: string[], current: string[]) => {\n  return function <P extends object>(Component: React.FC<P>): React.FC<P> {\n    const WrappedComponent: React.FC<P> = (props) =>\n      required.every((key) => current.includes(key)) ? <Component {...props} /> : null;\n\n    WrappedComponent.displayName = `WithPermissions(${Component.displayName || Component.name || 'Component'})`;\n\n    return WrappedComponent;\n  };\n};\n\nexport default withPermissions;\n","import { Card, Row, Col, Table, Input, Button, Pagination, Popconfirm, Tree } from \"antd\"\nimport { getAccountList } from \"../../api/users\";\nimport useDataList from \"../../hooks/useDataList\";\nimport type { TreeDataNode, TreeProps } from 'antd';\nimport { useEffect, useState } from \"react\";\nimport withPermissions from \"../../utils/withPermissions\";\nimport type { ButtonProps } from \"antd\";\nimport { useAppSelector } from \"../../store/hooks\";\ninterface MenuType {\n    label: string;\n    icon: string;\n    key: string;\n    children?: MenuType[]\n}\ninterface DataType {\n    id: number;\n    accountName: string;\n    auth: string;\n    person: string;\n    tel: string;\n    department: string;\n    menu: MenuType[];\n}\ninterface SearchType {\n    accountName: string\n}\n\ninterface AccountListResponse {\n    list: DataType[];\n    total: number;\n}\n\nconst treeData: TreeDataNode[] = [\n    {\n        title: '工作台',\n        key: '/dashboard',\n    },\n    {\n        title: '租戶管理',\n        key: '/users',\n        children: [\n            { title: '租戶列表', key: '/users/list' },\n            { title: '新增租戶', key: '/users/add' },\n        ],\n    },\n    {\n        title: '物業管理',\n        key: '/estate',\n        children: [\n            {\n                title: \"樓宇管理\",\n                key: \"/estate/tenement\"\n            },\n            {\n                title: \"房間管理\",\n                key: \"/estate/room\"\n            },\n            {\n                title: \"車輛信息\",\n                key: \"/estate/car\"\n            }\n\n        ]\n    },\n    {\n        title: '報修管理',\n        key: '/repair',\n    },\n    {\n        title: '財務管理',\n        key: '/finance',\n        children: [\n            {\n                title: \"合同管理\",\n                key: \"/finance/contract\"\n            },\n            {\n                title: \"合同詳情\",\n                key: \"/finance/surrender\"\n            },\n            {\n                title: \"帳單管理\",\n                key: \"/finance/bill\"\n            }\n        ]\n    },\n    {\n        title: '招商管理',\n        key: '/merchants',\n    },\n    {\n        title: '運營管理',\n        key: '/operation',\n        children: [\n            {\n                title: \"運營總覽\",\n                key: \"/operation/all\"\n            },\n            {\n                title: \"文章發布\",\n                key: \"/operation/article\"\n            },\n            {\n                title: \"內容評論\",\n                key: \"/operation/comments\"\n            }\n        ]\n    },\n    {\n        title: '設備管理',\n        key: '/equipment',\n    },\n    {\n        title: '能源消耗',\n        key: '/energy',\n    },\n    {\n        title: '系統設置',\n        key: \"/settings\",\n    },\n    {\n        title: '個人中心',\n        key: \"/personal\",\n    },\n];\n\nfunction extractTreeKeys(data: MenuType[]): string[] {\n    let keys: string[] = [];\n    data.forEach((item) => {\n        if (item.children && item.children.length > 0) {\n            const childKeys = extractTreeKeys(item.children);\n            keys = keys.concat(childKeys);\n        } else {\n            keys.push(item.key);\n        }\n    });\n    return keys;\n}\n\n\n\nfunction Settings() {\n    const AuthButton: React.FC<ButtonProps> = withPermissions(\n        [\"delete\"],\n        JSON.parse(sessionStorage.getItem(\"btnAuth\") as string)\n    )(Button);\n\n    const edit = (menu: MenuType[], accountName: string) => {\n        setAccountName(accountName);\n        const newCheckedKeys = extractTreeKeys(menu)\n        setCheckedKeys(newCheckedKeys)\n    }\n\n    const columns = [\n        {\n            title: \"No.\",\n            key: \"index\",\n            render: (_text: unknown, _record: DataType, index: number) => index + 1,\n        },\n        {\n            title: \"帳號名稱\",\n            dataIndex: \"accountName\",\n            key: \"accountName\",\n        },\n        {\n            title: \"所屬權限\",\n            dataIndex: \"auth\",\n            key: \"auth\",\n        },\n        {\n            title: \"使用人\",\n            dataIndex: \"person\",\n            key: \"person\",\n        },\n        {\n            title: \"使用人電話\",\n            dataIndex: \"tel\",\n            key: \"tel\",\n        },\n        {\n            title: \"所屬部門\",\n            dataIndex: \"department\",\n            key: \"department\",\n        },\n        {\n            title: \"操作\",\n            key: \"operate\",\n            render(_value: unknown, record: DataType) {\n                return <>\n                    <Button size=\"small\" type=\"primary\" className=\"mr\" onClick={() => edit(record.menu, record.accountName)}>修改權限</Button>\n                    <Popconfirm\n                        title=\"操作提示\"\n                        description=\"確認要刪除當前帳號嗎？\"\n                        okText=\"是\"\n                        cancelText=\"否\"\n                    >\n                        <AuthButton size=\"small\" type=\"primary\" danger>刪除帳號</AuthButton>\n                        {/* <Button size=\"small\" type=\"primary\" danger>刪除帳號</Button> */}\n                    </Popconfirm>\n\n                </>\n            }\n        }\n    ]\n    const [accountName, setAccountName] = useState<string>(\"當前用戶\")\n    const { menuList } = useAppSelector((state) => state.authSlice)\n    const [checkedKeys, setCheckedKeys] = useState<React.Key[]>([])\n    const { dataList, page, pageSize, total, loading, formData, onChange, handleChange } = useDataList<SearchType, DataType>({ accountName: \"\" }, getAccountList<AccountListResponse>)\n\n    useEffect(() => {\n        setCheckedKeys(extractTreeKeys(menuList))\n    }, [menuList])\n\n    const handle = () => {\n        console.log(checkedKeys, accountName)\n    }\n    const onCheck: TreeProps['onCheck'] = (checkedKeys) => {\n        setCheckedKeys(checkedKeys as React.Key[])\n    }\n    return <div>\n        <Card>\n            <Row gutter={16}>\n                <Col span={8}>\n                    <Input name=\"accountName\" value={formData.accountName} placeholder=\"請輸入帳戶名\" onChange={handleChange} />\n                </Col>\n                <Col span={8}>\n                    <Button type=\"primary\"> 搜尋</Button>\n                </Col>\n                <Col span={8} className=\"tr\">\n                    <Button type=\"primary\">新建帳號</Button>\n                </Col>\n            </Row>\n\n        </Card>\n\n        <Row gutter={16} className=\"mt\">\n            <Col span={8} >\n                <Card title={accountName + \":所擁權限\"}>\n                    <Tree\n                        checkable\n                        treeData={treeData}\n                        checkedKeys={checkedKeys}\n                        onCheck={onCheck}\n                    />\n                </Card>\n                <Card className=\"mt\">\n                    <Popconfirm\n                        title=\"操作提示\"\n                        description={`您確認要修改${accountName}用戶的權限嗎？}`}\n                        okText=\"是\"\n                        cancelText=\"否\"\n                        onConfirm={handle}\n                    >\n                        <Button type=\"primary\">提交修改</Button>\n                    </Popconfirm>\n                </Card>\n            </Col>\n\n            <Col span={16}>\n                <Card>\n                    <Table\n                        loading={loading}\n                        columns={columns}\n                        dataSource={dataList}\n                        rowKey={record => record.id}\n                        pagination={false}\n                    />\n                    <Pagination className=\"fr mr\" showQuickJumper total={total} current={page} pageSize={pageSize} onChange={onChange} />\n                </Card>\n\n            </Col>\n        </Row>\n\n    </div>\n}\n\n\n\nexport default Settings\n"],"names":["initialFormData","fetchData","dataList","setDataList","useState","page","setPage","pageSize","setPageSize","total","setTotal","loading","setLoading","formData","setFormData","loadData","useCallback","async","data","list","error","console","log","useEffect","onChange","handleChange","e","name","value","target","prevState","reset","withPermissions","required","current","Component","WrappedComponent","props","every","key","includes","_jsx","displayName","treeData","title","children","extractTreeKeys","keys","forEach","item","length","childKeys","concat","push","AuthButton","JSON","parse","sessionStorage","getItem","Button","columns","render","_text","_record","index","dataIndex","_value","record","_jsxs","_Fragment","size","type","className","onClick","edit","menu","accountName","setAccountName","newCheckedKeys","setCheckedKeys","Popconfirm","description","okText","cancelText","danger","menuList","useAppSelector","state","authSlice","checkedKeys","useDataList","getAccountList","Card","Row","gutter","Col","span","Input","placeholder","Tree","checkable","onCheck","onConfirm","handle","Table","dataSource","rowKey","id","pagination","Pagination","showQuickJumper"],"sourceRoot":""}