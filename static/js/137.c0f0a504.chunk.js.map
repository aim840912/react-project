{"version":3,"file":"static/js/137.c0f0a504.chunk.js","mappings":"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","sources":["page/users/userForm.tsx","api/userList.ts","page/users/index.tsx"],"sourcesContent":["import { Modal, Row, Col, Form, Input, Radio, message } from \"antd\"\nimport { useEffect } from \"react\";\nimport { editUser } from \"../../api/userList\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport type { UserFormData } from \"../../store/user/userSlice\";\n\ninterface FormProps {\n    visible: boolean;\n    hideModal: () => void;\n    title: string;\n    loadData: () => void\n}\n\nfunction UserForm(props: FormProps) {\n    const [form] = Form.useForm();\n    const userData: UserFormData = useAppSelector((state) => state.userSlice.userData);\n    const { visible, hideModal, title, loadData } = props\n    const handleOk = () => {\n        form.validateFields().then(async (res) => {\n            const { data } = await editUser(res);\n            message.success(data as string)\n            hideModal();\n            loadData()\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n    useEffect(() => {\n        title === \"新增企業\" ? form.resetFields() : form.setFieldsValue(userData)\n    }, [visible, form, title, userData])\n    return <>\n        <Modal\n            title={title}\n            open={visible}\n            onCancel={hideModal}\n            width={800}\n            onOk={handleOk}\n        >\n            <Form\n                form={form}\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n            >\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"客戶名稱\"\n                            name=\"name\"\n                            rules={[{ required: true, message: \"客戶名稱不能為空\" }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"聯繫電話\"\n                            name=\"tel\"\n                            rules={[{ required: true, message: \"聯繫電話不能為空\" }, { pattern: /^1[3-9]\\d{9}$/, message: \"請輸入有效的手機號\" }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"經營狀態\"\n                            name=\"status\"\n                            rules={[{ required: true, message: \"經營狀態不能為空\" }]}\n                        >\n                            <Radio.Group>\n                                <Radio value=\"1\">營業中</Radio>\n                                <Radio value=\"2\">暫停營業</Radio>\n                                <Radio value=\"3\">已關閉</Radio>\n                            </Radio.Group>\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"所屬行業\"\n                            name=\"business\"\n                            rules={[{ required: true, message: \"所屬行業不能為空\" }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"郵箱\"\n                            name=\"email\"\n                            rules={[{ required: true, message: \"郵箱不能為空\" }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"統一信用代碼\"\n                            name=\"creditCode\"\n                            rules={[{ required: true, message: \"統一信用代碼不能為空\" }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"工商註冊號\"\n                            name=\"industryNum\"\n                            rules={[{ required: true, message: \"工商註冊號不能為空\" }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"組織機構代碼\"\n                            name=\"organizationCode\"\n                            rules={[{ required: true, message: \"組織機構代碼不能為空\" }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"法人名\"\n                            name=\"legalPerson\"\n                            rules={[{ required: true, message: \"法人名不能為空\" }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </Modal>\n    </>\n}\nexport default UserForm\n","import { post } from \"../utils/http/request\";\nimport type { DataType } from \"../page/users/interface\";\n\ninterface searchType {\n    page: number;\n    pageSize: number;\n    companyName?: string;\n    contact?: string;\n    tel?: string;\n}\n\ninterface ApiResponse<T> {\n    code: number;\n    message: string;\n    data: T;\n}\n\nexport function getUserList<T = unknown>(data: searchType): Promise<ApiResponse<T>> {\n    return post<T>(\"/userList\", data);\n}\n\n\n// 刪除客戶\nexport function deleteUser(id: string) {\n    return post(\"/deleteUser\", { id })\n}\n\n// 批量刪除客戶\nexport function batchDeleteUser(ids: React.Key[]) {\n    return post(\"/batchDeleteUser\", { ids })\n}\n\n// 編輯/新增 企業接口\nexport function editUser(data: DataType) {\n    return post(\"/editUser\", data)\n}\n","import { Card, Row, Col, Input, Button, Table, Pagination, Tag, Popconfirm, message } from \"antd\"\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\"\nimport type { DataType } from \"./interface\"\nimport { getUserList, deleteUser, batchDeleteUser } from \"../../api/userList\"\nimport type { TableProps, PaginationProps } from \"antd\"\nimport UserForm from \"./userForm\"\nimport { useDispatch } from \"react-redux\"\nimport { setUserData, emptyUserData } from \"../../store/user/userSlice\"\n\ninterface searchType {\n    companyName: string;\n    contact: string;\n    phone: string\n\n}\n\ninterface UserListResponse {\n    total: number;\n    list: DataType[];\n}\n\nfunction Users() {\n    const [dataList, setDataList] = useState<DataType[]>([]);\n    const [page, setPage] = useState<number>(1)\n    const [pageSize, setPageSize] = useState<number>(10)\n    const [total, setTotal] = useState<number>(0)\n    const [loading, setLoading] = useState<boolean>(false)\n    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([])\n    const [isModelOpen, setIsModalOpen] = useState<boolean>(false)\n    const [title, setTitle] = useState<string>(\"\")\n    const dispatch = useDispatch()\n    const [formData, setFormData] = useState<searchType>({\n        companyName: \"\",\n        contact: \"\",\n        phone: \"\"\n    })\n\n    const disabled = useMemo(() => {\n        return selectedRowKeys.length ? false : true\n    }, [selectedRowKeys])\n\n    const loadData = useCallback(async () => {\n        setLoading(true)\n        const { data: { total, list } } = await getUserList<UserListResponse>({ ...formData, page, pageSize });\n        setDataList(list)\n        setTotal(total)\n        setLoading(false)\n    }, [formData, page, pageSize])\n\n    useEffect(() => {\n        loadData()\n    }, [loadData])\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.target;\n        setFormData(prevState => ({\n            ...prevState,\n            [name]: value\n        }))\n    }\n\n    const OnSelectChange = (selectedRowKeys: React.Key[], selectedRows: DataType[]) => {\n        setSelectedRowKeys(selectedRowKeys)\n    }\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: OnSelectChange\n    }\n\n    const onChange: PaginationProps['onChange'] = (page, pageSize) => {\n        setPage(page)\n        setPageSize(pageSize)\n    }\n\n    const reset = () => {\n        setSelectedRowKeys([])\n        setFormData({\n            companyName: \"\",\n            contact: \"\",\n            phone: \"\"\n        })\n        setPage(1)\n        setPageSize(10)\n        loadData()\n    }\n\n    const confirm = async function (id: string) {\n        const { data } = await deleteUser(id)\n        message.success(data as string) // Ensure data is cast to a string\n        loadData()\n    }\n\n    const batchDelete = async () => {\n        const { data } = await batchDeleteUser(selectedRowKeys)\n        message.success(data as string) // Ensure data is cast to a string\n        loadData()\n    }\n\n    const edit = (record: DataType) => {\n        setIsModalOpen(true)\n        setTitle(\"編輯企業\");\n        dispatch(setUserData(record))\n    }\n\n    const add = () => {\n        setIsModalOpen(true)\n        setTitle(\"新增企業\");\n        dispatch(setUserData(emptyUserData))\n    }\n\n    const hideModal = useCallback(() => {\n        setIsModalOpen(false)\n    }, [])\n\n    const columns: TableProps<DataType>['columns'] = [\n        {\n            title: \"No.\",\n            key: \"index\",\n            render(value, record, index) {\n                return index + 1\n            },\n        },\n        {\n            title: \"客戶名稱\",\n            key: \"name\",\n            dataIndex: \"name\"\n        },\n        {\n            title: \"經營狀態\",\n            key: \"status\",\n            dataIndex: \"status\",\n            render(value) {\n                if (value === 1) {\n                    return <Tag color=\"green\">營業中</Tag>\n                } else if (value === 2) {\n                    return <Tag color=\"#f50\">暫停營業</Tag>\n                } else if (value === 3) {\n                    return <Tag color=\"red\">已關閉</Tag>\n                }\n            }\n        },\n        {\n            title: \"聯繫電話\",\n            key: \"tel\",\n            dataIndex: \"tel\"\n        },\n        {\n            title: \"所屬行業\",\n            key: \"business\",\n            dataIndex: \"business\"\n        },\n        {\n            title: \"郵箱\",\n            key: \"email\",\n            dataIndex: \"email\"\n        },\n        {\n            title: \"統一信用代碼\",\n            key: \"creditCode\",\n            dataIndex: \"creditCode\"\n        },\n        {\n            title: \"工商註冊號\",\n            key: \"industryNum\",\n            dataIndex: \"industryNum\"\n        },\n        {\n            title: \"組織結構代碼\",\n            key: \"organizationCode\",\n            dataIndex: \"organizationCode\"\n        },\n        {\n            title: \"法人名\",\n            key: \"legalPerson\",\n            dataIndex: \"legalPerson\"\n        },\n        {\n            title: \"操作\",\n            key: \"operate\",\n            render(value, record, index) {\n                return <>\n                    <Button type=\"primary\" size=\"small\" onClick={() => edit(record)}>編輯</Button>\n                    <Popconfirm\n                        title=\"刪除確認\"\n                        description=\"確定要刪除嗎\"\n                        okText=\"是\"\n                        cancelText=\"否\"\n                        onConfirm={() => confirm(record.id)}\n                    >\n                        <Button type=\"primary\" danger className=\"ml\" size=\"small\">刪除</Button>\n                    </Popconfirm>\n                </>\n            },\n        },\n    ]\n\n    return <div className=\"users\">\n        <MyUserForm visible={isModelOpen} title={title} hideModal={hideModal} loadData={loadData} />\n        <Card className=\"search\">\n            <Row gutter={16}>\n                <Col span={7}>\n                    <p>企業名稱:</p>\n                    <Input name=\"companyName\" value={formData.companyName} onChange={handleChange} />\n                </Col>\n                <Col span={7}>\n                    <p>聯絡人:</p>\n                    <Input name=\"contact\" value={formData.contact} onChange={handleChange} /></Col>\n                <Col span={7}>\n                    <p>連絡電話:</p>\n                    <Input name=\"phone\" value={formData.phone} onChange={handleChange} /></Col>\n                <Col span={3}>\n                    <Button type=\"primary\" onClick={loadData}>查詢</Button>\n                    <Button className=\"ml\" onClick={reset}>重置</Button>\n                </Col>\n            </Row>\n        </Card  >\n        <Card className=\"mt tr\">\n            <Button type=\"primary\" onClick={add}>新增企業</Button>\n            <Button danger type=\"primary\" className=\"ml\" disabled={disabled} onClick={batchDelete}>批量刪除</Button>\n        </Card>\n        <Card className=\"mt\">\n            <Table columns={columns} dataSource={dataList} rowKey={(record) => record.id} loading={loading} rowSelection={rowSelection} pagination={false} />\n            <Pagination\n                className=\"fr mt\"\n                total={total}\n                showSizeChanger\n                showQuickJumper\n                showTotal={(total) => `共 ${total} 條`}\n                onChange={onChange}\n                current={page}\n                pageSize={pageSize}\n            />\n        </Card>\n    </div>\n}\n\nconst MyUserForm = React.memo(UserForm)\nexport default Users\n"],"names":["props","form","Form","useForm","userData","useAppSelector","state","userSlice","visible","hideModal","title","loadData","useEffect","resetFields","setFieldsValue","_jsx","_Fragment","children","Modal","open","onCancel","width","onOk","handleOk","validateFields","then","async","data","post","editUser","res","message","success","catch","err","console","log","_jsxs","labelCol","span","wrapperCol","Row","gutter","Col","Item","label","name","rules","required","Input","pattern","Radio","value","MyUserForm","React","UserForm","dataList","setDataList","useState","page","setPage","pageSize","setPageSize","total","setTotal","loading","setLoading","selectedRowKeys","setSelectedRowKeys","isModelOpen","setIsModalOpen","setTitle","dispatch","useDispatch","formData","setFormData","companyName","contact","phone","disabled","useMemo","length","useCallback","list","handleChange","e","target","prevState","rowSelection","onChange","OnSelectChange","selectedRows","confirm","id","deleteUser","columns","key","render","record","index","dataIndex","Tag","color","Button","type","size","onClick","setUserData","edit","Popconfirm","description","okText","cancelText","onConfirm","danger","className","Card","reset","add","emptyUserData","ids","Table","dataSource","rowKey","pagination","Pagination","showSizeChanger","showQuickJumper","showTotal","current"],"sourceRoot":""}