{"version":3,"file":"static/js/8488.b056260d.chunk.js","mappings":"6IA0DA,QAjDA,SAA8CA,EAAoBC,GAC9D,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAc,KACvCC,EAAMC,IAAWF,EAAAA,EAAAA,UAAiB,IAClCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAiB,KAC1CK,EAAOC,IAAYN,EAAAA,EAAAA,UAAiB,IACpCO,EAASC,IAAcR,EAAAA,EAAAA,WAAkB,IACzCS,EAAUC,IAAeV,EAAAA,EAAAA,UAAYJ,GAEtCe,GAAWC,EAAAA,EAAAA,cAAYC,UACzBL,GAAW,GACX,IACI,MAAQM,MAAM,KAAEC,EAAI,MAAEV,UAAkBR,EAAU,CAAEI,OAAME,cAAaM,IACvEV,EAAYgB,GACZT,EAASD,EACb,CAAE,MAAOW,GAELC,QAAQC,IAAIF,EAChB,CAAC,QAEGR,GAAW,EACf,IACD,CAACC,EAAUR,EAAME,EAAUN,IAwB9B,OAtBAsB,EAAAA,EAAAA,YAAU,KACNR,GAAU,GACX,CAACA,IAoBG,CAAEb,WAAUG,OAAME,WAAUE,QAAOE,UAASE,WAAUV,cAAaG,UAASE,cAAaE,WAAUE,aAAYE,cAAaC,WAAUS,SAV5HA,CAACnB,EAAcE,KAC5BD,EAAQD,GACRG,EAAYD,EAAS,EAQ8HkB,aAlBjIC,IAClB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1Bf,GAAYgB,IAAS,IACdA,EACH,CAACH,GAAOC,KACT,EAa8JG,MALvJA,KACVzB,EAAQ,GACRE,EAAY,IACZM,EAAYd,EAAgB,EAGpC,C,6LCzCA,QAbA,SAAyBgC,EAA+BC,GAEpD,OAAO,SAAUC,GACb,OAAO,SAAUC,GAEb,OAD+BH,EAAoBI,OAAMC,GAAQJ,EAAgBK,SAASD,MAInFE,EAAAA,EAAAA,KAACL,EAAS,IAAKC,IAFX,IAGf,CACJ,CACJ,ECcMK,EAA2B,CAC7B,CACIC,MAAO,qBACPC,IAAK,cAET,CACID,MAAO,2BACPC,IAAK,SACLC,SAAU,CACN,CAAEF,MAAO,2BAAQC,IAAK,eACtB,CAAED,MAAO,2BAAQC,IAAK,gBAG9B,CACID,MAAO,2BACPC,IAAK,UACLC,SAAU,CACN,CACIF,MAAO,2BACPC,IAAK,oBAET,CACID,MAAO,2BACPC,IAAK,gBAET,CACID,MAAO,2BACPC,IAAK,iBAKjB,CACID,MAAO,2BACPC,IAAK,WAET,CACID,MAAO,2BACPC,IAAK,WACLC,SAAU,CACN,CACIF,MAAO,2BACPC,IAAK,qBAET,CACID,MAAO,2BACPC,IAAK,sBAET,CACID,MAAO,2BACPC,IAAK,mBAIjB,CACID,MAAO,2BACPC,IAAK,cAET,CACID,MAAO,2BACPC,IAAK,aACLC,SAAU,CACN,CACIF,MAAO,2BACPC,IAAK,kBAET,CACID,MAAO,2BACPC,IAAK,sBAET,CACID,MAAO,2BACPC,IAAK,yBAIjB,CACID,MAAO,2BACPC,IAAK,cAET,CACID,MAAO,2BACPC,IAAK,WAET,CACID,MAAO,2BACPC,IAAK,aAET,CACID,MAAO,2BACPC,IAAK,cAIb,SAASE,EAAgB1B,GACrB,IAAI2B,EAAiB,GASrB,OARA3B,EAAK4B,SAAST,IACV,GAAIA,EAAKM,UAAYN,EAAKM,SAASI,OAAS,EAAG,CAC3C,MAAMC,EAAsBJ,EAAgBP,EAAKM,UACjDE,EAAOA,EAAKI,OAAOD,EACvB,MACIH,EAAKK,KAAKb,EAAKK,IACnB,IAEGG,CACX,CA0IA,QAtIA,WACI,MAAMM,EAA4BC,EAAgB,CAAC,UAAWC,KAAKC,MAAMC,eAAeC,QAAQ,YAA9DJ,CAAqFK,EAAAA,IAQjHC,EAAU,CACZ,CACIjB,MAAO,MACPC,IAAK,QACLiB,OAAQA,CAACC,EAAWC,EAAaC,IAAeA,EAAQ,GAE5D,CACIrB,MAAO,2BACPsB,UAAW,cACXrB,IAAK,eAET,CACID,MAAO,2BACPsB,UAAW,OACXrB,IAAK,QAET,CACID,MAAO,qBACPsB,UAAW,SACXrB,IAAK,UAET,CACID,MAAO,iCACPsB,UAAW,MACXrB,IAAK,OAET,CACID,MAAO,2BACPsB,UAAW,aACXrB,IAAK,cAET,CACID,MAAO,eACPC,IAAK,UACLiB,OAAMA,CAAC/B,EAAeiC,KACXG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAtB,SAAA,EACHJ,EAAAA,EAAAA,KAACkB,EAAAA,GAAM,CAACS,KAAK,QAAQC,KAAK,UAAUC,UAAU,KAAKC,QAASA,IA1C/DC,EAACC,EAAkBC,KAC5BC,EAAeD,GACf,MAAME,EAAiB9B,EAAgB2B,GACvCI,EAAeD,EAAe,EAuCgDJ,CAAKT,EAAOU,KAAMV,EAAOW,aAAa7B,SAAC,8BACzGJ,EAAAA,EAAAA,KAACqC,EAAAA,EAAU,CACPnC,MAAM,2BACNoC,YAAY,qEACZC,OAAO,SACPC,WAAW,SAAGpC,UAEdJ,EAAAA,EAAAA,KAACY,EAAU,CAACe,KAAK,QAAQC,KAAK,UAAUa,QAAM,EAAArC,SAAC,qCAQ5D6B,EAAaC,IAAkBrE,EAAAA,EAAAA,UAAiB,6BACjD,SAAE6E,IAAaC,EAAAA,EAAAA,KAAaC,GAAeA,EAAMC,aAChDC,EAAaV,IAAkBvE,EAAAA,EAAAA,UAAsB,KACtD,SAAEF,EAAQ,KAAEG,EAAI,SAAEE,EAAQ,MAAEE,EAAK,QAAEE,EAAO,SAAEE,EAAQ,YAAEV,EAAW,QAAEG,EAAO,YAAEE,EAAW,SAAEE,EAAQ,WAAEE,EAAU,YAAEE,EAAW,SAAEC,EAAQ,SAAES,EAAQ,aAAEC,EAAY,MAAEM,IAAUuD,EAAAA,EAAAA,GAAkC,CAAEd,YAAa,IAAMe,EAAAA,IAYrO,OAVAhE,EAAAA,EAAAA,YAAU,KACNoD,EAAe/B,EAAgBqC,GAAU,GAC1C,KAQIjB,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACHJ,EAAAA,EAAAA,KAACiD,EAAAA,EAAI,CAAA7C,UACDqB,EAAAA,EAAAA,MAACyB,EAAAA,EAAG,CAACC,OAAQ,GAAG/C,SAAA,EACZJ,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACC,KAAM,EAAEjD,UACTJ,EAAAA,EAAAA,KAACsD,EAAAA,EAAK,CAAClE,KAAK,cAAcC,MAAOf,EAAS2D,YAAasB,YAAY,uCAAStE,SAAUC,OAE1Fc,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACC,KAAM,EAAEjD,UACTJ,EAAAA,EAAAA,KAACkB,EAAAA,GAAM,CAACU,KAAK,UAASxB,SAAC,qBAE3BJ,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACC,KAAM,EAAGxB,UAAU,KAAIzB,UACxBJ,EAAAA,EAAAA,KAACkB,EAAAA,GAAM,CAACU,KAAK,UAASxB,SAAC,qCAMnCqB,EAAAA,EAAAA,MAACyB,EAAAA,EAAG,CAACC,OAAQ,GAAItB,UAAU,KAAIzB,SAAA,EAC3BqB,EAAAA,EAAAA,MAAC2B,EAAAA,EAAG,CAACC,KAAM,EAAEjD,SAAA,EACTJ,EAAAA,EAAAA,KAACiD,EAAAA,EAAI,CAAC/C,MAAO+B,EAAc,4BAAQ7B,UAC/BJ,EAAAA,EAAAA,KAACwD,EAAAA,EAAI,CACDC,WAAS,EACTxD,SAAUA,EACV6C,YAAaA,EACbY,QA1BmBZ,IACnCV,EAAeU,EAA2B,OA4BlC9C,EAAAA,EAAAA,KAACiD,EAAAA,EAAI,CAACpB,UAAU,KAAIzB,UAChBJ,EAAAA,EAAAA,KAACqC,EAAAA,EAAU,CACPnC,MAAM,2BACNoC,YAAa,uCAASL,+CACtBM,OAAO,SACPC,WAAW,SACXmB,UAtCLC,KACX9E,QAAQC,IAAI+D,EAAab,EAAY,EAqCH7B,UAElBJ,EAAAA,EAAAA,KAACkB,EAAAA,GAAM,CAACU,KAAK,UAASxB,SAAC,qCAKnCJ,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACC,KAAM,GAAGjD,UACVqB,EAAAA,EAAAA,MAACwB,EAAAA,EAAI,CAAA7C,SAAA,EACDJ,EAAAA,EAAAA,KAAC6D,EAAAA,EAAK,CACFzF,QAASA,EACT+C,QAASA,EACT2C,WAAYnG,EACZoG,OAAQzC,GAAUA,EAAO0C,GACzBC,YAAY,KAEhBjE,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CAACrC,UAAU,QAAQsC,iBAAe,EAACjG,MAAOA,EAAOkG,QAAStG,EAAME,SAAUA,EAAUiB,SAAUA,cAO7H,C","sources":["hooks/useDataList.ts","utils/withPermissions.tsx","page/settings/index.tsx"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\r\ntype MyFormData = {\r\n    [key: string]: any\r\n}\r\n\r\ninterface DataFetcher<T> {\r\n    (args: T & { page: number; pageSize: number }): Promise<any>\r\n}\r\n\r\nfunction useDataList<T extends MyFormData, U>(initialFormData: T, fetchData: DataFetcher<T>) {\r\n    const [dataList, setDataList] = useState<U[]>([])\r\n    const [page, setPage] = useState<number>(1);\r\n    const [pageSize, setPageSize] = useState<number>(10);\r\n    const [total, setTotal] = useState<number>(0)\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [formData, setFormData] = useState<T>(initialFormData);\r\n\r\n    const loadData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const { data: { list, total } } = await fetchData({ page, pageSize, ...formData });\r\n            setDataList(list);\r\n            setTotal(total)\r\n        } catch (error) {\r\n\r\n            console.log(error)\r\n        } finally {\r\n\r\n            setLoading(false)\r\n        }\r\n    }, [formData, page, pageSize, fetchData])\r\n\r\n    useEffect(() => {\r\n        loadData()\r\n    }, [loadData]);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const onChange = (page: number, pageSize: number) => {\r\n        setPage(page);\r\n        setPageSize(pageSize)\r\n    }\r\n\r\n    const reset = () => {\r\n        setPage(1)\r\n        setPageSize(10)\r\n        setFormData(initialFormData)\r\n    }\r\n    return { dataList, page, pageSize, total, loading, formData, setDataList, setPage, setPageSize, setTotal, setLoading, setFormData, loadData, onChange, handleChange, reset }\r\n}\r\n\r\n\r\nexport default useDataList","//你所擁有的權限 當前按鈕所需要的權限\r\nfunction withPermissions(requiredPermissions: string[], userPermissions: string[]): (Componet: React.FC) => React.FC {\r\n\r\n    return function (Component: React.FC) {\r\n        return function (props: any): React.ReactElement | null {\r\n            const hasPermission: boolean = requiredPermissions.every(item => userPermissions.includes(item));\r\n            if (!hasPermission) {\r\n                return null\r\n            }\r\n            return <Component {...props} />\r\n        }\r\n    }\r\n}\r\n\r\nexport default withPermissions","import { Card, Row, Col, Table, Input, Button, Pagination, Popconfirm, Tree } from \"antd\"\r\nimport type { TableProps } from 'antd';\r\nimport { getAccountList } from \"../../api/users\";\r\nimport useDataList from \"../../hooks/useDataList\";\r\nimport type { TreeDataNode, TreeProps } from 'antd';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport withPermissions from \"../../utils/withPermissions\";\r\ninterface MenuType {\r\n    label: string;\r\n    icon: string;\r\n    key: string;\r\n    children?: MenuType[]\r\n}\r\ninterface DataType {\r\n    id: number;\r\n    accountName: string;\r\n    auth: string;\r\n    person: string;\r\n    tel: string;\r\n    department: string;\r\n}\r\ninterface SearchType {\r\n    accountName: string\r\n}\r\n\r\nconst treeData: TreeDataNode[] = [\r\n    {\r\n        title: '工作台',\r\n        key: '/dashboard',\r\n    },\r\n    {\r\n        title: '租戶管理',\r\n        key: '/users',\r\n        children: [\r\n            { title: '租戶列表', key: '/users/list' },\r\n            { title: '新增租戶', key: '/users/add' },\r\n        ],\r\n    },\r\n    {\r\n        title: '物業管理',\r\n        key: '/estate',\r\n        children: [\r\n            {\r\n                title: \"樓宇管理\",\r\n                key: \"/estate/tenement\"\r\n            },\r\n            {\r\n                title: \"房間管理\",\r\n                key: \"/estate/room\"\r\n            },\r\n            {\r\n                title: \"車輛信息\",\r\n                key: \"/estate/car\"\r\n            }\r\n\r\n        ]\r\n    },\r\n    {\r\n        title: '報修管理',\r\n        key: '/repair',\r\n    },\r\n    {\r\n        title: '財務管理',\r\n        key: '/finance',\r\n        children: [\r\n            {\r\n                title: \"合同管理\",\r\n                key: \"/finance/contract\"\r\n            },\r\n            {\r\n                title: \"合同詳情\",\r\n                key: \"/finance/surrender\"\r\n            },\r\n            {\r\n                title: \"帳單管理\",\r\n                key: \"/finance/bill\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '招商管理',\r\n        key: '/merchants',\r\n    },\r\n    {\r\n        title: '運營管理',\r\n        key: '/operation',\r\n        children: [\r\n            {\r\n                title: \"運營總覽\",\r\n                key: \"/operation/all\"\r\n            },\r\n            {\r\n                title: \"文章發布\",\r\n                key: \"/operation/article\"\r\n            },\r\n            {\r\n                title: \"內容評論\",\r\n                key: \"/operation/comments\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '設備管理',\r\n        key: '/equipment',\r\n    },\r\n    {\r\n        title: '能源消耗',\r\n        key: '/energy',\r\n    },\r\n    {\r\n        title: '系統設置',\r\n        key: \"/settings\",\r\n    },\r\n    {\r\n        title: '個人中心',\r\n        key: \"/personal\",\r\n    },\r\n];\r\n\r\nfunction extractTreeKeys(data: any) {\r\n    let keys: string[] = [];\r\n    data.forEach((item: any) => {\r\n        if (item.children && item.children.length > 0) {\r\n            const childKeys: string[] = extractTreeKeys(item.children);\r\n            keys = keys.concat(childKeys)\r\n        } else {\r\n            keys.push(item.key)\r\n        }\r\n    })\r\n    return keys\r\n}\r\n\r\n\r\n\r\nfunction Settings() {\r\n    const AuthButton: React.FC<any> = withPermissions(['delete'], JSON.parse(sessionStorage.getItem(\"btnAuth\") as string))(Button)\r\n\r\n    const edit = (menu: MenuType[], accountName: string) => {\r\n        setAccountName(accountName);\r\n        const newCheckedKeys = extractTreeKeys(menu)\r\n        setCheckedKeys(newCheckedKeys)\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: \"No.\",\r\n            key: \"index\",\r\n            render: (text: any, record: any, index: any) => index + 1,\r\n        },\r\n        {\r\n            title: \"帳號名稱\",\r\n            dataIndex: \"accountName\",\r\n            key: \"accountName\",\r\n        },\r\n        {\r\n            title: \"所屬權限\",\r\n            dataIndex: \"auth\",\r\n            key: \"auth\",\r\n        },\r\n        {\r\n            title: \"使用人\",\r\n            dataIndex: \"person\",\r\n            key: \"person\",\r\n        },\r\n        {\r\n            title: \"使用人電話\",\r\n            dataIndex: \"tel\",\r\n            key: \"tel\",\r\n        },\r\n        {\r\n            title: \"所屬部門\",\r\n            dataIndex: \"department\",\r\n            key: \"department\",\r\n        },\r\n        {\r\n            title: \"操作\",\r\n            key: \"operate\",\r\n            render(value: string, record: any) {\r\n                return <>\r\n                    <Button size=\"small\" type=\"primary\" className=\"mr\" onClick={() => edit(record.menu, record.accountName)}>修改權限</Button>\r\n                    <Popconfirm\r\n                        title=\"操作提示\"\r\n                        description=\"確認要刪除當前帳號嗎？\"\r\n                        okText=\"是\"\r\n                        cancelText=\"否\"\r\n                    >\r\n                        <AuthButton size=\"small\" type=\"primary\" danger>刪除帳號</AuthButton>\r\n                        {/* <Button size=\"small\" type=\"primary\" danger>刪除帳號</Button> */}\r\n                    </Popconfirm>\r\n\r\n                </>\r\n            }\r\n        }\r\n    ]\r\n    const [accountName, setAccountName] = useState<string>(\"當前用戶\")\r\n    const { menuList } = useSelector((state: any) => state.authSlice)\r\n    const [checkedKeys, setCheckedKeys] = useState<React.Key[]>([])\r\n    const { dataList, page, pageSize, total, loading, formData, setDataList, setPage, setPageSize, setTotal, setLoading, setFormData, loadData, onChange, handleChange, reset } = useDataList<SearchType, DataType>({ accountName: \"\" }, getAccountList)\r\n\r\n    useEffect(() => {\r\n        setCheckedKeys(extractTreeKeys(menuList))\r\n    }, [])\r\n\r\n    const handle = () => {\r\n        console.log(checkedKeys, accountName)\r\n    }\r\n    const onCheck: TreeProps['onCheck'] = (checkedKeys) => {\r\n        setCheckedKeys(checkedKeys as React.Key[])\r\n    }\r\n    return <div>\r\n        <Card>\r\n            <Row gutter={16}>\r\n                <Col span={8}>\r\n                    <Input name=\"accountName\" value={formData.accountName} placeholder=\"請輸入帳戶名\" onChange={handleChange} />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Button type=\"primary\"> 搜尋</Button>\r\n                </Col>\r\n                <Col span={8} className=\"tr\">\r\n                    <Button type=\"primary\">新建帳號</Button>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Card>\r\n\r\n        <Row gutter={16} className=\"mt\">\r\n            <Col span={8} >\r\n                <Card title={accountName + \":所擁權限\"}>\r\n                    <Tree\r\n                        checkable\r\n                        treeData={treeData}\r\n                        checkedKeys={checkedKeys}\r\n                        onCheck={onCheck}\r\n                    />\r\n                </Card>\r\n                <Card className=\"mt\">\r\n                    <Popconfirm\r\n                        title=\"操作提示\"\r\n                        description={`您確認要修改${accountName}用戶的權限嗎？}`}\r\n                        okText=\"是\"\r\n                        cancelText=\"否\"\r\n                        onConfirm={handle}\r\n                    >\r\n                        <Button type=\"primary\">提交修改</Button>\r\n                    </Popconfirm>\r\n                </Card>\r\n            </Col>\r\n\r\n            <Col span={16}>\r\n                <Card>\r\n                    <Table\r\n                        loading={loading}\r\n                        columns={columns}\r\n                        dataSource={dataList}\r\n                        rowKey={record => record.id}\r\n                        pagination={false}\r\n                    />\r\n                    <Pagination className=\"fr mr\" showQuickJumper total={total} current={page} pageSize={pageSize} onChange={onChange} />\r\n                </Card>\r\n\r\n            </Col>\r\n        </Row>\r\n\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default Settings"],"names":["initialFormData","fetchData","dataList","setDataList","useState","page","setPage","pageSize","setPageSize","total","setTotal","loading","setLoading","formData","setFormData","loadData","useCallback","async","data","list","error","console","log","useEffect","onChange","handleChange","e","name","value","target","prevState","reset","requiredPermissions","userPermissions","Component","props","every","item","includes","_jsx","treeData","title","key","children","extractTreeKeys","keys","forEach","length","childKeys","concat","push","AuthButton","withPermissions","JSON","parse","sessionStorage","getItem","Button","columns","render","text","record","index","dataIndex","_jsxs","_Fragment","size","type","className","onClick","edit","menu","accountName","setAccountName","newCheckedKeys","setCheckedKeys","Popconfirm","description","okText","cancelText","danger","menuList","useSelector","state","authSlice","checkedKeys","useDataList","getAccountList","Card","Row","gutter","Col","span","Input","placeholder","Tree","checkable","onCheck","onConfirm","handle","Table","dataSource","rowKey","id","pagination","Pagination","showQuickJumper","current"],"sourceRoot":""}