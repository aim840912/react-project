{"version":3,"file":"static/js/8334.73c09ab9.chunk.js","mappings":"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","sources":["components/navLeft/iconList.tsx","components/navLeft/index.tsx","components/breadCrumb/index.tsx","components/header/index.tsx","page/home/index.tsx"],"sourcesContent":["import {\r\n  DashboardOutlined,\r\n  UserOutlined,\r\n  UnorderedListOutlined,\r\n  UserAddOutlined,\r\n  SettingOutlined,\r\n  ProfileOutlined,\r\n  ToolOutlined,\r\n  LaptopOutlined,\r\n  InsertRowLeftOutlined,\r\n  BankOutlined,\r\n  TruckOutlined,\r\n  DollarOutlined,\r\n  FileTextOutlined,\r\n  FrownOutlined,\r\n  TransactionOutlined,\r\n  FundProjectionScreenOutlined,\r\n  FundViewOutlined,\r\n  ReadOutlined,\r\n  CommentOutlined,\r\n  ThunderboltOutlined,\r\n  TeamOutlined\r\n} from '@ant-design/icons';\r\nconst icons: Record<string, React.ReactNode> = {\r\n  DashboardOutlined: <DashboardOutlined />,\r\n  UserOutlined: <UserOutlined />,\r\n  UnorderedListOutlined: <UnorderedListOutlined />,\r\n  UserAddOutlined: <UserAddOutlined />,\r\n  SettingOutlined: <SettingOutlined />,\r\n  LaptopOutlined: <LaptopOutlined />,\r\n  ProfileOutlined: <ProfileOutlined />,\r\n  InsertRowLeftOutlined: <InsertRowLeftOutlined />,\r\n  BankOutlined: <BankOutlined />,\r\n  ToolOutlined: <ToolOutlined />,\r\n  TruckOutlined: <TruckOutlined />,\r\n  DollarOutlined: <DollarOutlined />,\r\n  FileTextOutlined: <FileTextOutlined />,\r\n  FrownOutlined: <FrownOutlined />,\r\n  TransactionOutlined: <TransactionOutlined />,\r\n  FundProjectionScreenOutlined: <FundProjectionScreenOutlined />,\r\n  FundViewOutlined: <FundViewOutlined />,\r\n  ReadOutlined: <ReadOutlined />,\r\n  CommentOutlined: <CommentOutlined />,\r\n  ThunderboltOutlined: <ThunderboltOutlined />,\r\n  TeamOutlined: <TeamOutlined />\r\n};\r\n\r\nexport default icons","import React, { useCallback, useEffect, useState } from 'react';\nimport { Menu } from 'antd';\nimport icons from './iconList'\nimport logo from \"../../assets/logo.png\"\nimport { useNavigate, useLocation } from 'react-router';\n\nimport \"./index.scss\"\nimport { useAppSelector } from '../../store/hooks';\ninterface MenuItem {\n    key: string,\n    label: string,\n    icon?: React.ReactNode,\n    children?: MenuItem[]\n}\ninterface MenuItemFromData {\n    key: string,\n    label: string,\n    icon: string,\n    children?: MenuItemFromData[]\n}\n\nfunction NavLeft() {\n    const { menuList } = useAppSelector((state) => state.authSlice)\n    const navigate = useNavigate()\n    const [menuData, setMenuData] = useState<MenuItem[]>([])\n    const location = useLocation();\n\n    // 將返回的菜單數據轉換成我們需要的格式\n    const mapMenuItems = useCallback((items: MenuItemFromData[]): MenuItem[] => {\n        return items.map((item: MenuItemFromData) => ({\n            key: item.key,\n            label: item.label,\n            icon: icons[item.icon],\n            children: item.children ? mapMenuItems(item.children) : undefined\n        }));\n    }, []);\n\n    const configMenu = useCallback(() => {\n        const mappedMenuItems: MenuItem[] = mapMenuItems(menuList)\n        setMenuData(mappedMenuItems)\n    }, [menuList, mapMenuItems])\n\n    useEffect(() => {\n        configMenu()\n    }, [configMenu])\n\n    function handleClick({ key }: { key: string }) {\n        navigate(key)\n    }\n\n\n    return <div className='navleft'>\n        <div className='logo'>\n            <img src={logo} alt=\"\" width={18} />\n            <h1>朋遠智慧園區</h1>\n        </div>\n\n        <Menu\n            defaultSelectedKeys={['/dashboard']}\n            mode=\"inline\"\n            theme=\"dark\"\n            items={menuData}\n            onClick={handleClick}\n            selectedKeys={[location.pathname]}\n        />\n    </div>\n}\n\nexport default NavLeft\n","import { useLocation } from \"react-router\"\r\nimport { Breadcrumb } from 'antd';\r\nimport { useAppSelector } from \"../../store/hooks\";\r\n\r\ninterface MenuItem {\r\n    key: string,\r\n    label: string,\r\n    children?: MenuItem[]\r\n}\r\n\r\n//[{label:\"物業管理\"},{label:\"樓宇管理\"}] [\"物業管理\",\"樓宇管理\"]\r\nfunction findBreadCrumbPath(path: string, menuItems: MenuItem[]): string[] {\r\n    const pathSegments: string[] = [];\r\n\r\n    function findPath(currentPath: string, items: MenuItem[]) {\r\n        for (const item of items) {\r\n            if (currentPath.startsWith(item.key)) {\r\n                pathSegments.push(item.label)\r\n                if (item.children) {\r\n                    findPath(currentPath, item.children)\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return pathSegments\r\n    }\r\n    return findPath(path, menuItems)\r\n}\r\n\r\nfunction MyBreadCrumb() {\r\n    const location = useLocation()\r\n    const { menuList } = useAppSelector((state) => state.authSlice)\r\n    const breadList = findBreadCrumbPath(location.pathname, menuList).map(item => ({ title: item }))\r\n    return <Breadcrumb items={breadList} className=\"mt mb\" />\r\n}\r\n\r\nexport default MyBreadCrumb","import { UserOutlined, PoweroffOutlined, DownOutlined } from '@ant-design/icons';\nimport type { MenuProps } from 'antd';\nimport { Dropdown, Space } from 'antd';\nimport { clearToken } from '../../store/login/authSlice';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport { setMenu } from '../../store/login/authSlice';\nimport './index.scss'\n\nconst items: MenuProps['items'] = [\n    {\n        key: '1',\n        label: (\n            <span>個人中心</span>\n        ),\n        icon: <UserOutlined />,\n    },\n    {\n        key: '2',\n        label: (\n            <span>退出登錄</span>\n        ),\n        icon: <PoweroffOutlined />,\n    },\n\n];\nfunction MyHeader() {\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const onClick: MenuProps['onClick'] = ({ key }) => {\n        if (key === \"1\") {\n            //跳轉到個人中心\n            navigate(\"/personal\")\n        } else {\n            dispatch(clearToken());\n            dispatch(setMenu([]))\n            sessionStorage.clear()\n        }\n\n    }\n    return <div>\n        <Dropdown menu={{ items, onClick }}>\n            <span role=\"button\" className=\"dropdown-trigger\">\n                <Space>\n                    歡迎您,{sessionStorage.getItem(\"username\")}\n                    <DownOutlined />\n                </Space>\n            </span>\n\n        </Dropdown>\n    </div>\n}\n\nexport default MyHeader\n","import { useEffect, useState } from 'react';\nimport { Layout, theme } from 'antd';\nimport NavLeft from '../../components/navLeft';\nimport MyBreadCrumb from '../../components/breadCrumb';\nimport MyHeader from '../../components/header';\nimport { Outlet, useLocation, useNavigate } from 'react-router';\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nfunction Home() {\n    const [collapsed, setCollapsed] = useState<boolean>(false);\n    const {\n        token: { colorBgContainer },\n    } = theme.useToken();\n\n    const location = useLocation()\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        console.log(\"location\" + location.pathname)\n        if (location.pathname === \"/\") {\n            navigate(\"/dashboard\")\n        }\n    }, [location, navigate])\n\n    return <div className='home'>\n        <Layout style={{ minHeight: '100vh' }}>\n            <Sider collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}>\n                <NavLeft />\n            </Sider>\n            <Layout>\n                <Header style={{ paddingRight: \"20px\", background: colorBgContainer, textAlign: \"right\" }}>\n                    <MyHeader />\n                </Header>\n                <Content style={{ margin: '0 16px', height: \"90vh\", overflowY: \"auto\", overflowX: \"hidden\" }}>\n                    <MyBreadCrumb />\n                    <Outlet />\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>\n                    Ant Design ©{new Date().getFullYear()} Created by Ant UED\n                </Footer>\n            </Layout>\n        </Layout>\n    </div>\n}\n\nexport default Home;\n"],"names":["DashboardOutlined","_jsx","UserOutlined","UnorderedListOutlined","UserAddOutlined","SettingOutlined","LaptopOutlined","ProfileOutlined","InsertRowLeftOutlined","BankOutlined","ToolOutlined","TruckOutlined","DollarOutlined","FileTextOutlined","FrownOutlined","TransactionOutlined","FundProjectionScreenOutlined","FundViewOutlined","ReadOutlined","CommentOutlined","ThunderboltOutlined","TeamOutlined","menuList","useAppSelector","state","authSlice","navigate","useNavigate","menuData","setMenuData","useState","location","useLocation","mapMenuItems","useCallback","items","map","item","key","label","icon","icons","children","undefined","configMenu","mappedMenuItems","useEffect","_jsxs","className","src","logo","alt","width","Menu","defaultSelectedKeys","mode","theme","onClick","_ref","selectedKeys","pathname","breadList","path","menuItems","pathSegments","findPath","currentPath","startsWith","push","findBreadCrumbPath","title","Breadcrumb","PoweroffOutlined","dispatch","useDispatch","Dropdown","menu","clearToken","setMenu","sessionStorage","clear","role","Space","getItem","DownOutlined","Header","Content","Footer","Sider","Layout","collapsed","setCollapsed","token","colorBgContainer","useToken","console","log","style","minHeight","collapsible","onCollapse","value","NavLeft","paddingRight","background","textAlign","MyHeader","margin","height","overflowY","overflowX","MyBreadCrumb","Outlet","Date","getFullYear"],"sourceRoot":""}