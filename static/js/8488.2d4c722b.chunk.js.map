{"version":3,"file":"static/js/8488.2d4c722b.chunk.js","mappings":"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","sources":["hooks/useDataList.ts","utils/withPermissions.tsx","page/settings/index.tsx"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\r\n\r\ninterface DataFetcher<T, R> {\r\n    (args: T & { page: number; pageSize: number }): Promise<R>;\r\n}\r\nfunction useDataList<T extends { [K in keyof T]: string | number | boolean }, U>(initialFormData: T, fetchData: DataFetcher<T, { data: { list: U[]; total: number } }>) {\r\n    const [dataList, setDataList] = useState<U[]>([])\r\n    const [page, setPage] = useState<number>(1);\r\n    const [pageSize, setPageSize] = useState<number>(10);\r\n    const [total, setTotal] = useState<number>(0)\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [formData, setFormData] = useState<T>(initialFormData);\r\n\r\n    const loadData = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const { data: { list, total } } = await fetchData({ page, pageSize, ...formData });\r\n            setDataList(list);\r\n            setTotal(total)\r\n        } catch (error) {\r\n\r\n            console.log(error)\r\n        } finally {\r\n\r\n            setLoading(false)\r\n        }\r\n    }, [formData, page, pageSize, fetchData])\r\n\r\n    useEffect(() => {\r\n        loadData()\r\n    }, [loadData]);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const onChange = (page: number, pageSize: number) => {\r\n        setPage(page);\r\n        setPageSize(pageSize)\r\n    }\r\n\r\n    const reset = () => {\r\n        setPage(1)\r\n        setPageSize(10)\r\n        setFormData(initialFormData)\r\n    }\r\n    return { dataList, page, pageSize, total, loading, formData, setDataList, setPage, setPageSize, setTotal, setLoading, setFormData, loadData, onChange, handleChange, reset }\r\n}\r\n\r\n\r\nexport default useDataList","\r\nimport React from 'react';\r\n\r\nconst withPermissions = (required: string[], current: string[]) => <P extends object>(Component: React.FC<P>): React.FC<P> =>\r\n    (props) =>\r\n        required.every((key) => current.includes(key)) ? <Component {...props} /> : null;\r\n\r\nexport default withPermissions;\r\n","import { Card, Row, Col, Table, Input, Button, Pagination, Popconfirm, Tree } from \"antd\"\r\nimport type { TableProps } from 'antd';\r\nimport { getAccountList } from \"../../api/users\";\r\nimport useDataList from \"../../hooks/useDataList\";\r\nimport type { TreeDataNode, TreeProps } from 'antd';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport withPermissions from \"../../utils/withPermissions\";\r\nimport type { ButtonProps } from \"antd\";\r\nimport { useAppSelector } from \"../../store/hooks\";\r\ninterface MenuType {\r\n    label: string;\r\n    icon: string;\r\n    key: string;\r\n    children?: MenuType[]\r\n}\r\ninterface DataType {\r\n    id: number;\r\n    accountName: string;\r\n    auth: string;\r\n    person: string;\r\n    tel: string;\r\n    department: string;\r\n    menu: MenuType[];\r\n}\r\ninterface SearchType {\r\n    accountName: string\r\n}\r\n\r\nconst treeData: TreeDataNode[] = [\r\n    {\r\n        title: '工作台',\r\n        key: '/dashboard',\r\n    },\r\n    {\r\n        title: '租戶管理',\r\n        key: '/users',\r\n        children: [\r\n            { title: '租戶列表', key: '/users/list' },\r\n            { title: '新增租戶', key: '/users/add' },\r\n        ],\r\n    },\r\n    {\r\n        title: '物業管理',\r\n        key: '/estate',\r\n        children: [\r\n            {\r\n                title: \"樓宇管理\",\r\n                key: \"/estate/tenement\"\r\n            },\r\n            {\r\n                title: \"房間管理\",\r\n                key: \"/estate/room\"\r\n            },\r\n            {\r\n                title: \"車輛信息\",\r\n                key: \"/estate/car\"\r\n            }\r\n\r\n        ]\r\n    },\r\n    {\r\n        title: '報修管理',\r\n        key: '/repair',\r\n    },\r\n    {\r\n        title: '財務管理',\r\n        key: '/finance',\r\n        children: [\r\n            {\r\n                title: \"合同管理\",\r\n                key: \"/finance/contract\"\r\n            },\r\n            {\r\n                title: \"合同詳情\",\r\n                key: \"/finance/surrender\"\r\n            },\r\n            {\r\n                title: \"帳單管理\",\r\n                key: \"/finance/bill\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '招商管理',\r\n        key: '/merchants',\r\n    },\r\n    {\r\n        title: '運營管理',\r\n        key: '/operation',\r\n        children: [\r\n            {\r\n                title: \"運營總覽\",\r\n                key: \"/operation/all\"\r\n            },\r\n            {\r\n                title: \"文章發布\",\r\n                key: \"/operation/article\"\r\n            },\r\n            {\r\n                title: \"內容評論\",\r\n                key: \"/operation/comments\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '設備管理',\r\n        key: '/equipment',\r\n    },\r\n    {\r\n        title: '能源消耗',\r\n        key: '/energy',\r\n    },\r\n    {\r\n        title: '系統設置',\r\n        key: \"/settings\",\r\n    },\r\n    {\r\n        title: '個人中心',\r\n        key: \"/personal\",\r\n    },\r\n];\r\n\r\nfunction extractTreeKeys(data: MenuType[]): string[] {\r\n    let keys: string[] = [];\r\n    data.forEach((item) => {\r\n        if (item.children && item.children.length > 0) {\r\n            const childKeys = extractTreeKeys(item.children);\r\n            keys = keys.concat(childKeys);\r\n        } else {\r\n            keys.push(item.key);\r\n        }\r\n    });\r\n    return keys;\r\n}\r\n\r\n\r\n\r\nfunction Settings() {\r\n    const AuthButton: React.FC<ButtonProps> = withPermissions(\r\n        [\"delete\"],\r\n        JSON.parse(sessionStorage.getItem(\"btnAuth\") as string)\r\n    )(Button);\r\n\r\n    const edit = (menu: MenuType[], accountName: string) => {\r\n        setAccountName(accountName);\r\n        const newCheckedKeys = extractTreeKeys(menu)\r\n        setCheckedKeys(newCheckedKeys)\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: \"No.\",\r\n            key: \"index\",\r\n            render: (_text: unknown, _record: DataType, index: number) => index + 1,\r\n        },\r\n        {\r\n            title: \"帳號名稱\",\r\n            dataIndex: \"accountName\",\r\n            key: \"accountName\",\r\n        },\r\n        {\r\n            title: \"所屬權限\",\r\n            dataIndex: \"auth\",\r\n            key: \"auth\",\r\n        },\r\n        {\r\n            title: \"使用人\",\r\n            dataIndex: \"person\",\r\n            key: \"person\",\r\n        },\r\n        {\r\n            title: \"使用人電話\",\r\n            dataIndex: \"tel\",\r\n            key: \"tel\",\r\n        },\r\n        {\r\n            title: \"所屬部門\",\r\n            dataIndex: \"department\",\r\n            key: \"department\",\r\n        },\r\n        {\r\n            title: \"操作\",\r\n            key: \"operate\",\r\n            render(_value: unknown, record: DataType) {\r\n                return <>\r\n                    <Button size=\"small\" type=\"primary\" className=\"mr\" onClick={() => edit(record.menu, record.accountName)}>修改權限</Button>\r\n                    <Popconfirm\r\n                        title=\"操作提示\"\r\n                        description=\"確認要刪除當前帳號嗎？\"\r\n                        okText=\"是\"\r\n                        cancelText=\"否\"\r\n                    >\r\n                        <AuthButton size=\"small\" type=\"primary\" danger>刪除帳號</AuthButton>\r\n                        {/* <Button size=\"small\" type=\"primary\" danger>刪除帳號</Button> */}\r\n                    </Popconfirm>\r\n\r\n                </>\r\n            }\r\n        }\r\n    ]\r\n    const [accountName, setAccountName] = useState<string>(\"當前用戶\")\r\n    const { menuList } = useAppSelector((state) => state.authSlice)\r\n    const [checkedKeys, setCheckedKeys] = useState<React.Key[]>([])\r\n    const { dataList, page, pageSize, total, loading, formData, setDataList, setPage, setPageSize, setTotal, setLoading, setFormData, loadData, onChange, handleChange, reset } = useDataList<SearchType, DataType>({ accountName: \"\" }, getAccountList)\r\n\r\n    useEffect(() => {\r\n        setCheckedKeys(extractTreeKeys(menuList))\r\n    }, [])\r\n\r\n    const handle = () => {\r\n        console.log(checkedKeys, accountName)\r\n    }\r\n    const onCheck: TreeProps['onCheck'] = (checkedKeys) => {\r\n        setCheckedKeys(checkedKeys as React.Key[])\r\n    }\r\n    return <div>\r\n        <Card>\r\n            <Row gutter={16}>\r\n                <Col span={8}>\r\n                    <Input name=\"accountName\" value={formData.accountName} placeholder=\"請輸入帳戶名\" onChange={handleChange} />\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Button type=\"primary\"> 搜尋</Button>\r\n                </Col>\r\n                <Col span={8} className=\"tr\">\r\n                    <Button type=\"primary\">新建帳號</Button>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Card>\r\n\r\n        <Row gutter={16} className=\"mt\">\r\n            <Col span={8} >\r\n                <Card title={accountName + \":所擁權限\"}>\r\n                    <Tree\r\n                        checkable\r\n                        treeData={treeData}\r\n                        checkedKeys={checkedKeys}\r\n                        onCheck={onCheck}\r\n                    />\r\n                </Card>\r\n                <Card className=\"mt\">\r\n                    <Popconfirm\r\n                        title=\"操作提示\"\r\n                        description={`您確認要修改${accountName}用戶的權限嗎？}`}\r\n                        okText=\"是\"\r\n                        cancelText=\"否\"\r\n                        onConfirm={handle}\r\n                    >\r\n                        <Button type=\"primary\">提交修改</Button>\r\n                    </Popconfirm>\r\n                </Card>\r\n            </Col>\r\n\r\n            <Col span={16}>\r\n                <Card>\r\n                    <Table\r\n                        loading={loading}\r\n                        columns={columns}\r\n                        dataSource={dataList}\r\n                        rowKey={record => record.id}\r\n                        pagination={false}\r\n                    />\r\n                    <Pagination className=\"fr mr\" showQuickJumper total={total} current={page} pageSize={pageSize} onChange={onChange} />\r\n                </Card>\r\n\r\n            </Col>\r\n        </Row>\r\n\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default Settings"],"names":["initialFormData","fetchData","dataList","setDataList","useState","page","setPage","pageSize","setPageSize","total","setTotal","loading","setLoading","formData","setFormData","loadData","useCallback","async","data","list","error","console","log","useEffect","onChange","handleChange","e","name","value","target","prevState","reset","withPermissions","required","current","Component","props","every","key","includes","_jsx","treeData","title","children","extractTreeKeys","keys","forEach","item","length","childKeys","concat","push","AuthButton","JSON","parse","sessionStorage","getItem","Button","columns","render","_text","_record","index","dataIndex","_value","record","_jsxs","_Fragment","size","type","className","onClick","edit","menu","accountName","setAccountName","newCheckedKeys","setCheckedKeys","Popconfirm","description","okText","cancelText","danger","menuList","useAppSelector","state","authSlice","checkedKeys","useDataList","getAccountList","Card","Row","gutter","Col","span","Input","placeholder","Tree","checkable","onCheck","onConfirm","handle","Table","dataSource","rowKey","id","pagination","Pagination","showQuickJumper"],"sourceRoot":""}