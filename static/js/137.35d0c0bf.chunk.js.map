{"version":3,"file":"static/js/137.35d0c0bf.chunk.js","mappings":"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","sources":["page/users/userForm.tsx","api/userList.ts","page/users/index.tsx"],"sourcesContent":["import { Modal, Row, Col, Form, Input, Radio, message } from \"antd\"\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { editUser } from \"../../api/userList\";\r\n\r\ninterface FormProps {\r\n    visible: boolean;\r\n    hideModal: () => void;\r\n    title: string;\r\n    loadData: () => void\r\n}\r\n\r\nfunction UserForm(props: FormProps) {\r\n    const [form] = Form.useForm();\r\n    const { userData } = useSelector((state: any) => state.userSlice)\r\n    const { visible, hideModal, title, loadData } = props\r\n    const handleOk = () => {\r\n        form.validateFields().then(async (res) => {\r\n            const { data } = await editUser(res);\r\n            message.success(data)\r\n            hideModal();\r\n            loadData()\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        title === \"新增企業\" ? form.resetFields() : form.setFieldsValue(userData)\r\n    }, [visible])\r\n    return <>\r\n        <Modal\r\n            title={title}\r\n            open={visible}\r\n            onCancel={hideModal}\r\n            width={800}\r\n            onOk={handleOk}\r\n        >\r\n            <Form\r\n                form={form}\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n            >\r\n                <Row gutter={16}>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label=\"客戶名稱\"\r\n                            name=\"name\"\r\n                            rules={[{ required: true, message: \"客戶名稱不能為空\" }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label=\"聯繫電話\"\r\n                            name=\"tel\"\r\n                            rules={[{ required: true, message: \"聯繫電話不能為空\" }, { pattern: /^1[3-9]\\d{9}$/, message: \"請輸入有效的手機號\" }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={16}>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label=\"經營狀態\"\r\n                            name=\"status\"\r\n                            rules={[{ required: true, message: \"經營狀態不能為空\" }]}\r\n                        >\r\n                            <Radio.Group>\r\n                                <Radio value=\"1\">營業中</Radio>\r\n                                <Radio value=\"2\">暫停營業</Radio>\r\n                                <Radio value=\"3\">已關閉</Radio>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label=\"所屬行業\"\r\n                            name=\"business\"\r\n                            rules={[{ required: true, message: \"所屬行業不能為空\" }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={16}>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label=\"郵箱\"\r\n                            name=\"email\"\r\n                            rules={[{ required: true, message: \"郵箱不能為空\" }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label=\"統一信用代碼\"\r\n                            name=\"creditCode\"\r\n                            rules={[{ required: true, message: \"統一信用代碼不能為空\" }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={16}>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label=\"工商註冊號\"\r\n                            name=\"industryNum\"\r\n                            rules={[{ required: true, message: \"工商註冊號不能為空\" }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label=\"組織機構代碼\"\r\n                            name=\"organizationCode\"\r\n                            rules={[{ required: true, message: \"組織機構代碼不能為空\" }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={16}>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label=\"法人名\"\r\n                            name=\"legalPerson\"\r\n                            rules={[{ required: true, message: \"法人名不能為空\" }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n\r\n    </>\r\n}\r\nexport default UserForm","import { post } from \"../utils/http/request\";\r\nimport type { DataType } from \"../page/users/interface\";\r\n\r\ninterface searchType {\r\n    page: number;\r\n    pageSize: number;\r\n    companyName?: string;\r\n    contact?: string;\r\n    tel?: string;\r\n}\r\n\r\nexport function getUserList(data: searchType) {\r\n    return post(\"/userList\", data)\r\n}\r\n\r\n// 刪除客戶\r\nexport function deleteUser(id: string) {\r\n    return post(\"/deleteUser\", { id })\r\n}\r\n\r\n// 批量刪除客戶\r\nexport function batchDeleteUser(ids: React.Key[]) {\r\n    return post(\"/batchDeleteUser\", { ids })\r\n}\r\n\r\n// 編輯/新增 企業接口\r\nexport function editUser(data: DataType) {\r\n    return post(\"/editUser\", data)\r\n}","import { Card, Row, Col, Input, Button, Table, Pagination, Tag, Popconfirm, message } from \"antd\"\r\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\"\r\nimport type { DataType } from \"./interface\"\r\nimport { getUserList, deleteUser, batchDeleteUser, editUser } from \"../../api/userList\"\r\nimport type { TableProps, PaginationProps } from \"antd\"\r\nimport UserForm from \"./userForm\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { setUserData } from \"../../store/user/userSlice\"\r\n\r\ninterface searchType {\r\n    companyName: string;\r\n    contact: string;\r\n    phone: string\r\n\r\n}\r\n\r\nfunction Users() {\r\n    const [dataList, setDataList] = useState<DataType[]>([]);\r\n    const [page, setPage] = useState<number>(1)\r\n    const [pageSize, setPageSize] = useState<number>(10)\r\n    const [total, setTotal] = useState<number>(0)\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([])\r\n    const [isModelOpen, setIsModalOpen] = useState<boolean>(false)\r\n    const [title, setTitle] = useState<string>(\"\")\r\n    const dispatch = useDispatch()\r\n    const [formData, setFormData] = useState<searchType>({\r\n        companyName: \"\",\r\n        contact: \"\",\r\n        phone: \"\"\r\n    })\r\n\r\n    const disabled = useMemo(() => {\r\n        return selectedRowKeys.length ? false : true\r\n    }, [selectedRowKeys])\r\n\r\n    useEffect(() => {\r\n        loadData()\r\n    }, [page, pageSize])\r\n\r\n    const loadData = async () => {\r\n        setLoading(true)\r\n        const { data: { total, list } } = await getUserList({ ...formData, page, pageSize })\r\n        setDataList(list)\r\n        setTotal(total)\r\n        setLoading(false)\r\n    }\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    const OnSelectChange = (selectedRowKeys: React.Key[], selectedRows: any) => {\r\n        setSelectedRowKeys(selectedRowKeys)\r\n    }\r\n\r\n    const rowSelection = {\r\n        selectedRowKeys,\r\n        onChange: OnSelectChange\r\n    }\r\n\r\n    const onChange: PaginationProps['onChange'] = (page, pageSize) => {\r\n        setPage(page)\r\n        setPageSize(pageSize)\r\n    }\r\n\r\n    const reset = () => {\r\n        setSelectedRowKeys([])\r\n        setFormData({\r\n            companyName: \"\",\r\n            contact: \"\",\r\n            phone: \"\"\r\n        })\r\n        setPage(1)\r\n        setPageSize(10)\r\n        loadData()\r\n    }\r\n\r\n    const confirm = async function (id: string) {\r\n        const { data } = await deleteUser(id)\r\n        message.success(data)\r\n        loadData()\r\n    }\r\n\r\n    const batchDelete = async () => {\r\n        const { data } = await batchDeleteUser(selectedRowKeys)\r\n        message.success(data)\r\n        loadData()\r\n    }\r\n\r\n    const edit = (record: DataType) => {\r\n        setIsModalOpen(true)\r\n        setTitle(\"編輯企業\");\r\n        dispatch(setUserData(record))\r\n    }\r\n\r\n    const add = () => {\r\n        setIsModalOpen(true)\r\n        setTitle(\"新增企業\");\r\n        dispatch(setUserData({}))\r\n    }\r\n\r\n    const hideModal = useCallback(() => {\r\n        setIsModalOpen(false)\r\n    }, [])\r\n\r\n    const columns: TableProps<DataType>['columns'] = [\r\n        {\r\n            title: \"No.\",\r\n            key: \"index\",\r\n            render(value, record, index) {\r\n                return index + 1\r\n            },\r\n        },\r\n        {\r\n            title: \"客戶名稱\",\r\n            key: \"name\",\r\n            dataIndex: \"name\"\r\n        },\r\n        {\r\n            title: \"經營狀態\",\r\n            key: \"status\",\r\n            dataIndex: \"status\",\r\n            render(value) {\r\n                if (value === 1) {\r\n                    return <Tag color=\"green\">營業中</Tag>\r\n                } else if (value === 2) {\r\n                    return <Tag color=\"#f50\">暫停營業</Tag>\r\n                } else if (value === 3) {\r\n                    return <Tag color=\"red\">已關閉</Tag>\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: \"聯繫電話\",\r\n            key: \"tel\",\r\n            dataIndex: \"tel\"\r\n        },\r\n        {\r\n            title: \"所屬行業\",\r\n            key: \"business\",\r\n            dataIndex: \"business\"\r\n        },\r\n        {\r\n            title: \"郵箱\",\r\n            key: \"email\",\r\n            dataIndex: \"email\"\r\n        },\r\n        {\r\n            title: \"統一信用代碼\",\r\n            key: \"creditCode\",\r\n            dataIndex: \"creditCode\"\r\n        },\r\n        {\r\n            title: \"工商註冊號\",\r\n            key: \"industryNum\",\r\n            dataIndex: \"industryNum\"\r\n        },\r\n        {\r\n            title: \"組織結構代碼\",\r\n            key: \"organizationCode\",\r\n            dataIndex: \"organizationCode\"\r\n        },\r\n        {\r\n            title: \"法人名\",\r\n            key: \"legalPerson\",\r\n            dataIndex: \"legalPerson\"\r\n        },\r\n        {\r\n            title: \"操作\",\r\n            key: \"operate\",\r\n            render(value, record, index) {\r\n                return <>\r\n                    <Button type=\"primary\" size=\"small\" onClick={() => edit(record)}>編輯</Button>\r\n                    <Popconfirm\r\n                        title=\"刪除確認\"\r\n                        description=\"確定要刪除嗎\"\r\n                        okText=\"是\"\r\n                        cancelText=\"否\"\r\n                        onConfirm={() => confirm(record.id)}\r\n                    >\r\n                        <Button type=\"primary\" danger className=\"ml\" size=\"small\">刪除</Button>\r\n                    </Popconfirm>\r\n                </>\r\n            },\r\n        },\r\n    ]\r\n\r\n    return <div className=\"users\">\r\n        <MyUserForm visible={isModelOpen} title={title} hideModal={hideModal} loadData={loadData} />\r\n        <Card className=\"search\">\r\n            <Row gutter={16}>\r\n                <Col span={7}>\r\n                    <p>企業名稱:</p>\r\n                    <Input name=\"companyName\" value={formData.companyName} onChange={handleChange} />\r\n                </Col>\r\n                <Col span={7}>\r\n                    <p>聯絡人:</p>\r\n                    <Input name=\"contact\" value={formData.contact} onChange={handleChange} /></Col>\r\n                <Col span={7}>\r\n                    <p>連絡電話:</p>\r\n                    <Input name=\"phone\" value={formData.phone} onChange={handleChange} /></Col>\r\n                <Col span={3}>\r\n                    <Button type=\"primary\" onClick={loadData}>查詢</Button>\r\n                    <Button className=\"ml\" onClick={reset}>重置</Button>\r\n                </Col>\r\n            </Row>\r\n        </Card  >\r\n        <Card className=\"mt tr\">\r\n            <Button type=\"primary\" onClick={add}>新增企業</Button>\r\n            <Button danger type=\"primary\" className=\"ml\" disabled={disabled} onClick={batchDelete}>批量刪除</Button>\r\n        </Card>\r\n        <Card className=\"mt\">\r\n            <Table columns={columns} dataSource={dataList} rowKey={(record) => record.id} loading={loading} rowSelection={rowSelection} pagination={false} />\r\n            <Pagination\r\n                className=\"fr mt\"\r\n                total={total}\r\n                showSizeChanger\r\n                showQuickJumper\r\n                showTotal={(total) => `共 ${total} 條`}\r\n                onChange={onChange}\r\n                current={page}\r\n                pageSize={pageSize}\r\n            />\r\n        </Card>\r\n    </div>\r\n}\r\n\r\nconst MyUserForm = React.memo(UserForm)\r\nexport default Users\r\n"],"names":["props","form","Form","useForm","userData","useSelector","state","userSlice","visible","hideModal","title","loadData","useEffect","resetFields","setFieldsValue","_jsx","_Fragment","children","Modal","open","onCancel","width","onOk","handleOk","validateFields","then","async","data","post","editUser","res","message","success","catch","err","console","log","_jsxs","labelCol","span","wrapperCol","Row","gutter","Col","Item","label","name","rules","required","Input","pattern","Radio","value","MyUserForm","React","UserForm","dataList","setDataList","useState","page","setPage","pageSize","setPageSize","total","setTotal","loading","setLoading","selectedRowKeys","setSelectedRowKeys","isModelOpen","setIsModalOpen","setTitle","dispatch","useDispatch","formData","setFormData","companyName","contact","phone","disabled","useMemo","length","list","handleChange","e","target","prevState","rowSelection","onChange","OnSelectChange","selectedRows","confirm","id","deleteUser","useCallback","columns","key","render","record","index","dataIndex","Tag","color","Button","type","size","onClick","setUserData","edit","Popconfirm","description","okText","cancelText","onConfirm","danger","className","Card","reset","add","ids","Table","dataSource","rowKey","pagination","Pagination","showSizeChanger","showQuickJumper","showTotal","current"],"sourceRoot":""}